{% extends "base.html.twig" %}
{% block title %}Dziennik zdarzeń | {% endblock %}

{% block content %}
    <div class="container" style="max-width: 100%;">

        <div class="row">

            <div class="col-lg-6 col-md-12 order-2 order-lg-1" style="padding-top: 1.5em;">
                <div class="spinner-wrapper">
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>

                </div>
                <div id="map" style="width: 100%; height: 96%; min-height: 800px;"></div>
                <div class="text-center"><i>
                    <small>&copy; <a href="http://openmaptiles.org/">OpenMapTiles</a></small>
                </i></div>
            </div>

            <div class="col-lg-6 col-md-12 order-1 order-lg-2" style="padding-bottom: 1.5em;">
                <div style="text-align: center; padding: 2em 0em 1em">
                    {% include "logo.html.twig" %}
                    <form method="GET" id="filter_form">
                        <div class="form-group row">
                            <div class="col-md-2"></div>

                            <div class="col-md-3">
                                <select name="c" class="form-control" onchange="this.form.submit()">
                                    <option value="">--Wybierz miasto--</option>
                                    {% for val in knownCities %}
                                        <option {% if city == val %}selected{% endif %}
                                                value="{{ val }}">{{ val }}</option>
                                    {% endfor %}
                                </select>
                            </div>

                            <div class="col-md-2">
                                <select name="h" class="form-control" onchange="this.form.submit()">
                                    {% for val in [1,3,6,12] %}
                                        <option {% if timespan == val %}selected{% endif %} value="{{ val }}">
                                            {{ val }} {% if val == 1 %}godzina{% elseif val == 3 %}godziny{% else %}godzin{% endif %}
                                        </option>
                                    {% endfor %}
                                    {% for val in [1,2,3,4,5,6,7] %}
                                        <option {% if timespan == val*24 %}selected{% endif %} value="{{ val*24 }}">
                                            {{ val }} {% if val == 1 %}dzień{% else %}dni{% endif %}
                                        </option>
                                    {% endfor %}
                                </select>
                            </div>

                            <div class="col-md-3">
                                <select name="t" class="form-control" onchange="this.form.submit()">
                                    <option value="">--Wybierz typ--</option>
                                    {% for val in [
                                        {
                                            type: "new_battery",
                                            label: "Wymiana baterii"
                                        },
                                        {
                                            type: "low_battery",
                                            label: "Bateria < 30%"
                                        },
                                        {
                                            type: "depleted_battery",
                                            label: "Bateria rozładowana"
                                        }
                                    ] %}
                                        <option {% if type == val.type %}selected{% endif %} value="{{ val.type }}">
                                            {{ val.label }}
                                        </option>
                                    {% endfor %}
                                </select>
                            </div>
                            <div class="col-md-2"></div>
                        </div>
                    </form>
                    <table style="margin: 0 auto;" class="table">
                        <tr>
                            <td>Liczba zdarzeń:</td>
                            <td style="text-align: left;"><strong>{{ events|length }}</strong></td>
                        </tr>
                    </table>
                </div>

                <div class="col-lg-12 col-md-12">
                    <h5>Dziennik zdarzeń (ostatnie {{ timespan }}h):</h5>

                    <div class="scrollableTable">
                        <table class="table">
                            <thead class="thead-light">
                            <tr>
                                <th scope="col" style="width: 15%;">Rower</th>
                                <th scope="col" style="width: 45%;">Typ</th>
                                <th scope="col">Miasto</th>
                                <th scope="col" style="width: 20%;">Czas</th>
                            </tr>
                            </thead>
                            <tbody style="max-height: 500px;">
                            {% for event in events %}
                                <tr class="event_{{ event.type }}">
                                    <td style="width: 15%;">
                                        <a href="{{ path("bike_view", {code: event.bikeCode}) }}">{{ event.bikeCode }}</a>
                                    </td>
                                    <td style="width: 45%;">
                                        {{ event.type|trans }}
                                    </td>
                                    <td>
                                        {{ event.city|default("") }}
                                    </td>
                                    <td style="width: 20%;">{{ event.timestamp|date("H:i / d-m-Y") }}</td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>


                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="popup"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/openlayers/4.6.5/ol.js"></script>
    <script>

        $.get( "/event_map_data.json?" + $("#filter_form").serialize(), function( data ) {
            $(".spinner-wrapper").hide();
            let timeFormat = "HH:mm / DD-MM-YYYY";

            let points = [];

            $.each(data.points, function (key, value) {
                let labels = [];

                labels.push('<strong>Lokalizacja GPS:</strong> <a href="/?location='+value.location+'">'+value.location+'</a>');

                $.each(value.events, function(eventKey, event){
                    let label = '<a href="/rower/'+event.bike+'">Rower '+event.bike+'</a> - ';
                    switch (event.type) {
                        case "new_battery":
                            label += "nowa bateria";
                            break;
                        case "low_battery":
                            label += "słaba bateria";
                            break;
                        case "depleted_battery":
                            label += "rozładowany";
                            break;
                    }

                    label += " - " + event.time;

                    labels.push(label);
                });

                points.push(new ol.Feature({
                    geometry: new ol.geom.Point(ol.proj.fromLonLat(value.loc)),
                    label: labels.join("<br/>"),
                    event_type: value.events[0].type,
                    event_count: value.events.length
                }));

            });


            var pointsLayer = new ol.layer.Vector({
                source: new ol.source.Vector({
                    features: points
                }),
                style: function(feature) {
                    let image = null;
                    let size = 5 + feature.get("event_count");

                    if (size > 25) {
                        size = 25;
                    }

                    switch (feature.get("event_type")) {
                        case "new_battery":
                            image = new ol.style.RegularShape({
                                fill: new ol.style.Fill({color: 'green'}),
                                stroke: new ol.style.Stroke({color: 'black', width: 1}),
                                points: 4,
                                radius: size,
                            })
                            break;
                        case "low_battery":
                            image = new ol.style.RegularShape({
                                fill: new ol.style.Fill({color: 'yellow'}),
                                stroke: new ol.style.Stroke({color: 'black', width: 1}),
                                points: 4,
                                radius: size,
                            })
                            break;
                        case "depleted_battery":
                            image = new ol.style.RegularShape({
                                fill: new ol.style.Fill({color: '#EA5144'}),
                                stroke: new ol.style.Stroke({color: 'black', width: 1}),
                                points: 4,
                                radius: size,
                            })
                            break;
                    }

                    return [new ol.style.Style({
                        image: image
                    })];
                }
            });

            var map = new ol.Map({
                target: 'map',
                layers: [
                    new ol.layer.Tile({
                        source: new ol.source.OSM({
                            url:'https://tiles.gdziejestmevo.pl/styles/klokantech-basic/{z}/{x}/{y}@2x.png',
                            crossOrigin: null
                        })
                    }),
                    pointsLayer,
                ],

                view: new ol.View({
                    {% if city is empty %}
                        center: ol.proj.fromLonLat([18.585843, 54.380577]),
                        zoom: 9.5,
                    {% else %}
                        center: ol.proj.fromLonLat(data.points[0] ? data.points[0].loc : [18.585843, 54.380577]),
                        zoom: data.points[0] ? 11.75 : 9.5,
                    {% endif %}

                    minZoom: 8,
                    maxZoom: 16,
                })
            });

            var element = document.getElementById('popup');

            var popup = new ol.Overlay({
                element: element,
                positioning: 'bottom-center',
                stopEvent: false,
                offset: [0, 0]
            });

            map.addOverlay(popup);

            // display popup on click
            map.on('pointermove', function (evt) {
                var feature = map.forEachFeatureAtPixel(evt.pixel,
                    function (feature) {
                        return feature;
                    });

                if (feature && feature.get('label')) {
                    var coordinates = feature.getGeometry().getCoordinates();
                    popup.setPosition(coordinates);

                    $(element).attr("data-content", feature.get('label'));
                    $(element).popover({
                        placement: 'top',
                        html: true
                    })
                    $(element).popover('show');
                } else {
                    $(element).popover('hide');
                }
            });
        });

    </script>
{% endblock %}